buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'


version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


ext {
	springCloudVersion = 'Dalston.SR3'
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.cloud:spring-cloud-starter-eureka')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
	compile("org.springframework.cloud:spring-cloud-starter-bus-amqp")
	compile("org.springframework.cloud:spring-cloud-netflix-hystrix-amqp")
	compile('org.springframework.cloud:spring-cloud-starter-hystrix')
	compileOnly "org.projectlombok:lombok:1.16.16"

	testCompile('org.springframework.boot:spring-boot-starter-test')

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task buildDocker(type: Docker, dependsOn: build) {
	applicationName = jar.baseName
	dockerfile = file('Dockerfile')
	doFirst {
	  copy {
		from jar
		into "${stageDir}/target"
	  }
	}
  }